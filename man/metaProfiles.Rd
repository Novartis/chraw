% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_plotting.R
\name{calculateMetaProfiles}
\alias{calculateMetaProfiles}
\alias{reformatMatrixScores}
\alias{plotMetaProfileHeatmaps}
\title{Functions for signal meta profiles.}
\usage{
calculateMetaProfiles(
  object,
  regions,
  annotationColumns = NULL,
  includeSamples = NULL,
  inputColumn = "bigwigFile",
  outputFormat = "ScoreMatrixList",
  ...
)

reformatMatrixScores(
  matrixScores,
  object,
  annotationColumns = NULL,
  outputFormat = "long_df"
)

plotMetaProfileHeatmaps(
  object,
  regions,
  xcoords = c(-1, 0, 1),
  includeSamples,
  inputColumn = "bigwigFile",
  sampleLabelColumn,
  keep = c(0, 0.99),
  ...
)
}
\arguments{
\item{object}{A ChrawExperiment object.}

\item{regions}{GRanges objects containing the regions to plot.}

\item{annotationColumns}{A variable name from the metadata. Must be a column of colData(object).}

\item{includeSamples}{A character vector specifying which samples to include, these must be in \code{rownames(colData(object))}.}

\item{inputColumn}{A column of \code{colData(object)} with the paths to the files used to calculate the metaprofiles. These could be either \code{bigwigFile} or \code{bamFile}.}

\item{outputFormat}{A character vector specifying the output format of the metaprofiles. These could be either "ScoreMatrixList" for a ScoreMatrixList object of the package genomation, "list" for a normal R list or "df_long" for a long-formatted data frame.}

\item{...}{Parameters passed to the \code{ScoreMatrixList()} function.}

\item{matrixScores}{An object "ScoreMatrixList" obtained running the function \code{calculateMetaProfiles()}.}

\item{xcoords}{A three length vector that specifies the labels of the x-axis of the heatmap. It should contain the labels of the left-most position, center position and right-most position.}

\item{sampleLabelColumn}{A column name of the \code{colData(object)} to use for labelling. If missing, the default sample names will be used.}

\item{keep}{Lower and upper quantile values to trim the matrix heatmap when plotting. Useful to avoid artifacts due to outliers.}
}
\description{
These functions provide functionalities to plot the
signal meta profiles for selected genomic regions. These functions
provide options to either return the meta profiles as R objects for further
analysis or plot them as heatmaps.
}
\examples{
data(ce_examples)

ce_examples <- rewrite_paths(ce_examples)

peaks <- GenomicRanges::resize(rowRanges(ce_examples[[3]])[1:100,], 10^3, fix = 'center')
matrix <- calculateMetaProfiles(object = ce_examples, regions = peaks)

}
