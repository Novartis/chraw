% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_multiomics.R
\name{assignPeaks2Peaks}
\alias{assignPeaks2Peaks}
\title{Peak to peak assignment function.}
\usage{
assignPeaks2Peaks(
  object,
  experimentNames,
  filterAnnoCols = NULL,
  filterValues = NULL,
  assignFunc = findOverlaps
)
}
\arguments{
\item{object}{A ChrawExperiment object.}

\item{experimentNames}{Vector with two count experiment names, normally added using the \code{addCountExperiment} function.}

\item{filterAnnoCols}{Vector with one/two column names in \code{rowData} for peak filtering, e.g. simple_annotation added by the \code{annotateExperimentRegions} function.}

\item{filterValues}{Vector with one/two values to bes used to filter the peaks, e.g. in case of simple_annotation it can be 'Promoter', 'Intron' etc.}

\item{assignFunc}{GenomicRanges function to compare peak sets. Add the moment supported functions include \code{findOverlaps}, \code{precede}, \code{follow} and \code{nearest}.}
}
\value{
A data.frame combining the rowData from experiment 1 with experiment 2 based on the peak assignment.
}
\description{
Assign peaks to peaks either within the same experiment or
across experiments using an assignment function such as \code{findOverlaps},
\code{nearest}, etc.
}
\examples{
data(ce_examples)
ce_examples <- rewrite_paths(ce_examples)

# Combine promoters with the nearest peak
assignPeaks2Peaks(object = ce_examples,
                  experimentNames = c('Peaks', 'Peaks'),
                  filterAnnoCols = c('simple_annotation', 'simple_annotation'),
                  filterValues = c('Promoter', 'Distal Intergenic'),
                  assignFunc = GenomicRanges::nearest)

}
